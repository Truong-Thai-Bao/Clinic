<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOAAAADgCAMAAAAt85rTAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAFTUExURf///3HZ+gB93P7QuTkwKyid5QB83AF1ywF41PK+pwB52//QuPv+/3La+mvY+v/TuwBz
        2gB22vT8/x5z7/rJsXzc+iWb5XXg///ZwRhx7+Pq/CZ179z0/TIcD2rS+er5/nmj8yojHx2T4hOJ3+nv
        /Yet88DT+jF68Mfu/N3m/DYlGzUiGB0YFSghHQAAAOyiiJTg+tbTzQyD3pPF71aQ8dLe+rHJ+FeN8UaE
        8LTp/KDk+3Ke80lpc3DS79Hx/aXA92Gqv1tKQs2tml+gsoJsYZfW6cDT1vO4n6rV4e/SwUKu62OX8U+5
        8BiN4Mni9rzZ9HSq4pS29liTqFSFlD9EREddY2m911F7hzs2NTIRAEJMVD1CQty3o56CdEg8NbqZiHNe
        VaiOfhYAAICdo+jRxN6UfrW8yWWq16S3zIWx10ez7V3G9NXKxpe20lua34i67ZK97KYncFEAABTwSURB
        VHhe3Z37V9rY2sclSFoTkgDBQEjrBYHUqqNDFbC2xTrtWLW2OpeeM+dgreftXE6d0/b//+ldeyfAvgWS
        vTeM42etWVPCLV+fZz+3XJiZmSY13/c729vb2+2lBiBLvuDvTsX1fc8NsW2702lvtxo7FfJ1f1uytVqt
        VgHs1OtLJye+73qu7fknS91ajXzxbaBS2WktbXd827Ztf+m8dutcNqTWaJx4rm27/lKLfO72UGvVfdd2
        3XbrVjorJJvt7vmu7bcbtyfsUNRW9zq26+81CuQzt4dCq+3bdvv89rrqzMxqy3dtb+k2S5xp1F3P3dsh
        N98manXf9U5ut8RG2/W2/wYhNZsthNx7/Kz/z2ycuiXb6Nju3o2W+Gx3d2s+ZdKk5rd2dx+QL6dp2J57
        M8PN4oNdI5ASBXzW2H2wSL4V59z13Dq58a8le+/eYyCOVMQEWvPBvRGZvVZ3Pf/mdI+L97bm44rrAyy5
        9SzakrW27Z3cBD/NFp5tJRXXxzTNxw8KEXbKtnzPa5Bbpw5QR+53IkxzPiruVPZs+2SEH0+exceC6gJM
        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
</value>
  </data>
</root>