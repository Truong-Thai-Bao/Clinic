<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZZf9fyjB2bKTT3etAAAAAElFTkSuQmCC
</value>
  </data>
</root>